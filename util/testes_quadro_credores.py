import sys

from pdjus.service.BlocoQuadroService import BlocoQuadroService
from pdjus.service.ProcessoService import ProcessoService

if len(sys.argv) == 3:
    rank = int(sys.argv[1])
    fatia = int(sys.argv[2])
else:
    rank = 0
    fatia = 1

lista_id = [
    4742,
    4743,
    4750,
    4753,
    4761,
    4762,
    4825,
    5059,
    5177,
    5239,
    5300,
    5988,
    6421,
    6498,
    11194,
    11655,
    11945,
    12176,
    12477,
    12836,
    13285,
    13291,
    14249,
    17217,
    18552,
    19155,
    19677,
    20088,
    21071,
    21265,
    23949,
    24855,
    25016,
    25581,
    25854,
    27276,
    27733,
    28423,
    28994,
    29880,
    30064,
    30259,
    30323,
    31649,
    32236,
    33051,
    33314,
    33485,
    34597,
    35162,
    35505,
    36143,
    36266,
    38032,
    38311,
    39070,
    39672,
    40333,
    40548,
    41343,
    41790,
    42695,
    43352,
    43405,
    43491,
    44096,
    44375,
    45104,
    45570,
    45714,
    46772,
    47162,
    47195,
    47577,
    47761,
    48528,
    48814,
    49176,
    49723,
    49756,
    49880,
    51891,
    52933,
    53322,
    54252,
    54392,
    54856,
    55417,
    56251,
    57151,
    57161,
    57480,
    57557,
    58905,
    58922,
    59892,
    60213,
    61079,
    61896,
    62202,
    62496,
    62600,
    62791,
    62957,
    63452,
    63724,
    63830,
    64132,
    64906,
    64938,
    65048,
    65509,
    65717,
    65823,
    66212,
    66220,
    66498,
    66822,
    66829,
    67187,
    67400,
    67521,
    67663,
    67821,
    67869,
    68444,
    69101,
    69256,
    69391,
    69572,
    69804,
    69989,
    70552,
    70756,
    70868,
    71512,
    71686,
    71843,
    71970,
    72116,
    72687,
    74055,
    74158,
    74415,
    74702,
    76423,
    77095,
    77255,
    77771,
    77820,
    78459,
    78513,
    78690,
    78794,
    78960,
    79113,
    79772,
    80099,
    80403,
    80405,
    80535,
    80983,
    81600,
    81627,
    81732,
    81773,
    81815,
    82028,
    82173,
    82565,
    83099,
    83105,
    83817,
    84060,
    84217,
    84365,
    85273,
    85544,
    85766,
    86024,
    86733,
    87257,
    87406,
    87565,
    87855,
    88165,
    88181,
    88528,
    88642,
    88936,
    89157,
    89216,
    89351,
    89522,
    89611,
    89677,
    89844,
    89963,
    91389,
    91445,
    92085,
    92404,
    92599,
    93126,
    93190,
    93302,
    93318,
    93552,
    93805,
    93855,
    93993,
    94045,
    94257,
    94264,
    94299,
    94499,
    94540,
    94589,
    94827,
    94831,
    94954,
    95004,
    95237,
    95257,
    95367,
    95393,
    95618,
    95624,
    95658,
    95724,
    95879,
    96074,
    96485,
    96500,
    96561,
    96612,
    96807,
    97115,
    97365,
    97482,
    97724,
    97738,
    97907,
    97999,
    98046,
    98815,
    98817,
    98916,
    98935,
    98962,
    99436,
    99672,
    100000,
    100298,
    100398,
    100446,
    100447,
    101018,
    101733,
    101954,
    101960,
    102275,
    102392,
    102519,
    102761,
    102863,
    103412,
    103515,
    104095,
    104265,
    104291,
    104530,
    104880,
    105234,
    105243,
    105492,
    106053,
    106062,
    106323,
    106534,
    106657,
    106717,
    106801,
    106984,
    107080,
    107285,
    107723,
    108034,
    108109,
    108495,
    108569,
    108667,
    108825,
    108876,
    109243,
    109480,
    109527,
    109731,
    109913,
    110146,
    110249,
    110464,
    110558,
    111145,
    111164,
    111540,
    111809,
    111934,
    111972,
    112552,
    113027,
    113497,
    113683,
    114000,
    114019,
    114629,
    114716,
    115064,
    115407,
    115573,
    115831,
    115847,
    115935,
    116079,
    116241,
    116291,
    116714,
    116761,
    117228,
    117393,
    118602,
    118727,
    119041,
    119414,
    119619,
    120655,
    120812,
    121037,
    121299,
    121506,
    121615,
    122004,
    122475,
    122734,
    122850,
    123298,
    123647,
    124375,
    124413,
    124421,
    124608,
    124734,
    124930,
    124954,
    124994,
    125356,
    125389,
    125528,
    125581,
    125660,
    125975,
    126157,
    126405,
    126997,
    127076,
    127315,
    128066,
    128105,
    128266,
    128332,
    128559,
    128640,
    129500,
    129581,
    129586,
    129940,
    130704,
    130743,
    131100,
    131235,
    131326,
    131380,
    131803,
    132116,
    132303,
    132494,
    132512,
    132736,
    132814,
    133376,
    133472,
    133876,
    133892,
    133952,
    134000,
    134080,
    134467,
    134511,
    134599,
    134679,
    134770,
    134894,
    135074,
    135158,
    135175,
    135194,
    135238,
    135325,
    135474,
    135581,
    135742,
    135779,
    136057,
    136165,
    136544,
    136589,
    136981,
    137002,
    137017,
    137087,
    137272,
    137384,
    137435,
    137446,
    137480,
    137567,
    137807,
    137890,
    138108,
    138143,
    138218,
    138405,
    138543,
    138952,
    138994,
    138998,
    139025,
    139096,
    139128,
    139150,
    139154,
    139325,
    139346,
    139375,
    139381,
    139489,
    139635,
    139710,
    139766,
    139853,
    140042,
    140247,
    140393,
    140439,
    140448,
    140490,
    140493,
    140509,
    140626,
    140658,
    140670,
    140761,
    140986,
    140999,
    141285,
    141347,
    141490,
    141605,
    141751,
    141851,
    141891,
    141964,
    142316,
    142336,
    142394,
    142426,
    142485,
    142486,
    142730,
    142850,
    143001,
    143048,
    143088,
    143347,
    143632,
    143677,
    143717,
    143840,
    143879,
    143897,
    144003,
    144035,
    144112,
    144271,
    144297,
    144761,
    144782,
    145429,
    145570,
    145598,
    145933,
    146337,
    146416,
    146726,
    146813,
    146905,
    146998,
    147084,
    147274,
    147311,
    147403,
    147654,
    147791,
    147918,
    147953,
    148144,
    148147,
    148269,
    148350,
    148413,
    148486,
    148601,
    148721,
    148945,
    148982,
    149057,
    149130,
    149155,
    149358,
    149456,
    149470,
    149520,
    149657,
    149661,
    149738,
    149822,
    149844,
    149885,
    149918,
    149959,
    150185,
    150186,
    150218,
    150223,
    150355,
    150624,
    150711,
    150814,
    150882,
    150973,
    151141,
    151322,
    151370,
    151703,
    151971,
    152041,
    152148,
    152158,
    152291,
    152736,
    153149,
    153317,
    153399,
    153430,
    153513,
    154010,
    154192,
    154266,
    154286,
    154580,
    154586,
    155204,
    155300,
    155481,
    155833,
    155847,
    156449,
    156529,
    156555,
    156780,
    156866,
    156888,
    157041,
    157552,
    157728,
    157797,
    157854,
    157857,
    157872,
    157999,
    158017,
    158084,
    158102,
    158151,
    158257,
    158364,
    158380,
    158410,
    158475,
    158557,
    158621,
    158700,
    158787,
    158980,
    158995,
    159046,
    159310,
    159448,
    159837,
    159914,
    160027,
    160089,
    160102,
    160202,
    160271,
    160599,
    160669,
    160693,
    160763,
    160815,
    160822,
    161027,
    161160,
    161283,
    161330,
    161334,
    161437,
    161639,
    161724,
    161839,
    161957,
    162083,
    162088,
    162181,
    162329,
    162353,
    162432,
    162765,
    162968,
    163127,
    163287,
    163320,
    163459,
    163474,
    163629,
    163697,
    163758,
    163790,
    163928,
    164019,
    164046,
    164182,
    164340,
    164533,
    164592,
    164610,
    164670,
    164778,
    165324,
    165818,
    165858,
    166073,
    166093,
    166161,
    166308,
    166696,
    166890,
    166934,
    166981,
    167092,
    167137,
    167171,
    167198,
    167400,
    167453,
    167528,
    167566,
    167575,
    167589,
    167653,
    167920,
    168039,
    168095,
    168114,
    168134,
    168310,
    168330,
    168335,
    168384,
    168792,
    168883,
    168921,
    168958,
    169019,
    169090,
    169234,
    169250,
    169293,
    169319,
    169337,
    169434,
    169504,
    169577,
    169603,
    169609,
    169641,
    169646,
    169707,
    169710,
    169750,
    170102,
    170117,
    170332,
    170347,
    170508,
    170559,
    170633,
    170644,
    170669,
    170689,
    170961,
    171013,
    171257,
    171266,
    171363,
    171369,
    171407,
    171467,
    171501,
    171541,
    171614,
    171690,
    171970,
    171975,
    172010,
    172078,
    172141,
    172260,
    172278,
    172343,
    172831,
    172832,
    172849,
    172860,
    173180,
    173216,
    173280,
    173298,
    173442,
    173595,
    173597,
    173646,
    174153,
    174464,
    174677,
    174732,
    174744,
    174777,
    174832,
    174849,
    174863,
    174942,
    174954,
    174966,
    174982,
    175082,
    175108,
    175235,
    175288,
    175589,
    175602,
    175802,
    176077,
    176124,
    176325,
    176330,
    176485,
    176504,
    176530,
    176779,
    176840,
    176989,
    177045,
    177046,
    177112,
    177151,
    177507,
    177579,
    177590,
    177666,
    177733,
    177773,
    177968,
    178111,
    178187,
    178778,
    179181,
    179260,
    179266,
    179674,
    179746,
    179772,
    179814,
    179833,
    179991,
    180272,
    180374,
    182113,
    182276,
    182636,
    182776,
    182926,
    183943,
    184405,
    185020,
    185125,
    185132,
    185142,
    185175,
    185273,
    185515,
    185598,
    185706,
    185826,
    186773,
    187059,
    189407,
    190413,
    190744,
    190948,
    192469,
    195520,
    197597,
    198012,
    198384,
    198530,
    198757,
    198957,
    199299,
    199510,
    200758,
    201706,
    202375,
    202572,
    202934,
    203066,
    203223,
    203407,
    203547,
    204353,
    204695,
    204870,
    205045,
    205577,
    205605,
    206355,
    206358,
    206804,
    207280,
    207986,
    208134,
    208522,
    209624,
    210021,
    210153,
    210325,
    210893,
    212117,
    212870,
    213095,
    213735,
    213910,
    214929,
    215733,
    216249,
    216490,
    216831,
    217236,
    219042,
    219362,
    220186,
    220234,
    221296,
    221550,
    221715,
    222008,
    222735,
    223287,
    223521,
    223953,
    224347,
    225642,
    226715,
    226989,
    227887,
    229071,
    229133,
    229245,
    229465,
    229647,
    229657,
    229779,
    229914,
    230126,
    231001,
    231402,
    232002,
    232205,
    234099,
    234326,
    235924,
    236059,
    238094,
    239134,
    239760,
    241217,
    241284,
    242183,
    242423,
    245643,
    245773,
    245796,
    246365,
    246404,
    246585,
    246884,
    247402,
    247907,
    248556,
    248835,
    250239,
    252750,
    256259,
    259389,
    259553,
    259640,
    259995,
    261282,
    261915,
    262238,
    263065,
    263547,
    264455,
    264540,
    264786,
    265139,
    265291,
    265710,
    266225,
    266656,
    266856,
    267117,
    267658,
    268951,
    269475,
    269607,
    269839,
    270272,
    270483,
    274293,
    275812,
    276000,
    276066,
    277372,
    277711,
    278308,
    278565,
    279372,
    279479,
    279594,
    279704,
    280054,
    280982,
    281083,
    282549,
    282882,
    284144,
    284698,
    285040,
    285053,
    285207,
    285777,
    285863,
    286349,
    286893,
    287036,
    287238,
    287316,
    287329,
    287510,
    287714,
    287776,
    288145,
    289043,
    289102,
    290563,
    292468,
    293261,
    293581,
    314504,
    315254,
    316883,
    317199,
    320959,
    321135,
    321221,
    321862,
    322044,
    322325,
    322520,
    323183,
    323317,
    324098,
    324828,
    325559,
    325583,
    328030,
    328996,
    329501,
    329856,
    329925,
    329936,
    330007,
    330128,
    330149,
    330300,
    330475,
    330652,
    330738,
    330931,
    334877,
    334893,
    334988,
    335105,
    335142,
    335232,
    335291,
    335323,
    335708,
    335733,
    335882,
    336061,
    336083,
    336154,
    336158,
    336220,
    336415,
    336431,
    336494,
    336495,
    336595,
    336699,
    336914,
    336943,
    336995,
    337031,
    337473,
    337707,
    337803,
    337806,
    337930,
    338237,
    338255,
    338335,
    338502,
    338527,
    338543,
    338551,
    338651,
    338988,
    339012,
    339080,
    339105,
    339128,
    340014,
    340109,
    340335,
    358800,
    358950,
    359335,
    360438,
    360558,
    360567,
    367656,
    374989,
    417252,
    421822,
    421937,
    423876,
    425360,
    425519,
    428116,
    440908,
    440938,
    441043,
    441082,
    441091,
    441166,
    441180,
    441503,
    441511,
    441530,
    442247,
    442413,
    442502,
    442514,
    442557,
    442570,
    442591,
    442594,
    442631,
    442666,
    442680,
    442704,
    442718,
    442765,
    442833,
    442857,
    442879,
    442896,
    442918,
    442948,
    442955,
    442976,
    442996,
    443027,
    443048,
    443092,
    443114,
    443147,
    443246,
    443255,
    443300,
    443303,
    443371,
    443404,
    443417,
    443432,
    443439,
    443447,
    443476,
    443561,
    443579,
    443589,
    443595,
    443604,
    443621,
    443637,
    443643,
    443647,
    443665,
    443694,
    443714,
    443715,
    443795,
    443846,
    443875,
    443881,
    443947,
    443988,
    444008,
    444016,
    444065,
    444078,
    444096,
    444111,
    444146,
    444156,
    444223,
    444240,
    444268,
    444278,
    444289,
    444291,
    444305,
    444317,
    444324,
    444348,
    444372,
    444398,
    444422,
    444454,
    444465,
    444486,
    444512,
    444540,
    444578,
    444589,
    444602,
    444612,
    444713,
    444876,
    444918,
    444970,
    445020,
    445100,
    445224,
    445284,
    445289,
    445337,
    445369,
    445451,
    445495,
    445506,
    445520,
    445531,
    445561,
    445582,
    445619,
    445620,
    445650,
    445689,
    445709,
    445745,
    445749,
    445793,
    589392,
    589668,
    590465,
    609466,
    609500,
    609535,
    609590,
    609669,
    609722,
    609724,
    609748,
    609808,
    609843,
    610082,
    610329,
    610474,
    610542,
    610718,
    611891,
    611909,
    612342,
    612352,
    612519,
    612566,
    612582,
    612629,
    612703,
    612708,
    612763,
    613224,
    613464,
    613470,
    613887,
    614029,
    614220,
    614243,
    614251,
    614296,
    614367,
    614472,
    614656,
    614816,
    614936,
    614986,
    615254,
    615264,
    615430,
    615620,
    615764,
    615999,
    616010,
    616573,
    616686,
    616752,
    616982,
    617995,
    617996,
    618545,
    619843,
    619876,
    620879,
    620885,
    620904,
    624123,
    643385,
    643576,
    644317,
    645450,
    648140,
    651418,
    651498,
    5290827,
    5313370,
    5313583,
    5317756,
    5325291,
    5352092,
    5687400,
    5692476,
    5693469,
    5693859,
    5706359,
    5708122,
    5708188,
    5708823,
    5710660,
    5710801,
    5710920,
    5713721,
    5718897,
    5724395,
    5727890,
    5730124,
    5730155,
    5730464,
    5741681,
    5748209,
    5749177,
    5786769,
    5789033,
    5797253,
    5797456,
    5802915,
    6003118,
    6069025,
    6071268,
    6162545,
    6190426,
    6363222,
    6392825,
    6392852,
    6392873,
    6392889,
    6392904,
    6392954,
    6392956,
    6392985,
    6428565,
    6641720,
    6673262,
    8143685,
    9860483,
    13763818,
    13825341,
    13857874,
    13961111,
    13965084,
    14493800,
    14553885,
    14555601,
    14568626,
    14582262,
    14622801,
    14625579,
    14625580,
    14685142,
    15053051,
    15053766,
    15075178,
    15084970,
    15086188,
    15086646,
    15087550,
    15130297,
    15130312,
    15147481,
    15148028,
    15148266,
    15148340,
    15149451,
    15149492,
    15328891,
    15436822,
    15439297,
    15439939,
    15442769,
    16252129,
    16258847,
    16259078,
    16531152,
    16550401,
    16550668,
    16551140,
    16552629,
    16552721,
    16552866,
    16557085,
    16557124,
    16557209,
    16557235,
    16601589,
    16605582,
    16613408,
    16614494,
    16630577,
    16636846,
    16672616,
    16684387,
    16691921,
    16701801,
    16712989,
    16713611,
    16721770,
    16736760,
    16754057,
    16755212,
    16758414,
    16760893,
    16770057,
    16771957,
    16775200,
    16775204,
    16775209,
    16775211,
    16775285,
    16775346,
    16775439,
    16775530,
    16775580,
    16775620,
    16775696,
    16775869,
    16775898,
    16775939,
    16775983,
    16775989,
    16776029,
    16776051,
    16776094,
    16776179,
    16777461,
    16781392,
    16781397,
    16795668,
    16803405,
    16814022,
    16814079,
    16814112,
    16814153,
    16814175,
    16844535,
    16858857,
    17329518,
    17485502,
    18022221,
    18022239,
    18022254,
    18022294,
    18022296,
    18022297,
    18022299,
    18022310,
    18022313,
    18022327,
    18022355,
    18022459,
    18022534,
    18022546,
    18022557,
    18022688,
    18022784,
    18022790,
    18022801,
    18022854,
    18022857,
    18022877,
    18022885,
    18022900,
    18022951,
    18022968,
    18023143,
    18023251,
    18023252,
    18023277,
    18023291,
    18023366,
    18023464,
    18023468,
    18023470,
    18023472,
    18023546,
    18023611,
    18023727,
    18023799,
    18023805,
    18023836,
    18023861,
    18023985,
    18023996,
    18024027,
    18024126,
    18024135,
    18024266,
    18024327,
    18024373,
    18024388,
    18024405,
    18024427,
    18024455,
    18024476,
    18024632,
    18024679,
    18024685,
    18024729,
    18024736,
    18024743,
    18024744,
    18024965,
    18024996,
    18025015,
    18025022,
    18025028,
    18025031,
    18025036,
    18025044,
    18025057,
    18025081,
    18025104,
    18025113,
    18025129,
    18025149,
    18025167,
    18025177,
    18025217,
    18025248,
    18025250,
    18025251,
    18025252,
    18025254,
    18025255,
    18025257,
    18025258,
    18025499,
    18025521,
    18025811,
    18025816,
    18025945,
    18026131,
    18026133,
    18026274,
    18026327,
    18026329,
    18026366,
    18026390,
    18026888,
    18026907,
    18027020,
    18027048,
    18027377,
    18027591,
    18028145,
    18028360,
    18028420,
    18028664,
    18028872,
    18028890,
    18029148,
    18029622,
    18029683,
    18030046,
    18030465,
    18030555,
    18032084,
    18032088,
    18032090,
    18032109,
    18042253,
    18042288,
    18042741,
    18042983,
    18043226,
    18044540,
    18046042,
    18046475,
    18046638,
    18046733,
    18047323,
    18054654,
    18054683,
    18054769,
    18055323,
    18055371,
    18055399,
    18055485,
    18055526
]
processo_service = ProcessoService()
lista_procesos = processo_service.dao.lista_por_ids(lista=lista_id,rank=rank,fatia=fatia)

bloco_service = BlocoQuadroService()

blocos = {}
for processo in lista_procesos:
    lista = list(processo.blocos_quadro(bloco_service))
    for i, bloco in enumerate(lista):
        print("processo: " + processo.npu + " quadros {} de {}".format(str(i), str(len(lista))))
        blocos[bloco] = processo

def teste_quadro_habilitacaoes(blocos):
    bloco_service = BlocoQuadroService()

    print("verificando blocos")


    def encontra_credor_em_habilitacao(processo,quadro):
        if "BANCO" in quadro.nome:
            return False
        processo_service = ProcessoService()

        parte = processo_service.dao.execute_sql("select pt.nome as nome from producao.processo proc "
                                         "join producao.processo habilitacao on habilitacao.processo_principal_id = proc.id "
                                         "join producao.classe_processual cp on cp.id = habilitacao.classe_processual_id "
                                         "join producao.parte_processo ptp on ptp.processo_id = habilitacao.id "
                                         "join producao.parte pt on pt.id = ptp.parte_id "
                                         "where proc.id = {id} and cp.nome ~ 'CREDITO' and SIMILARITY(pt.nome,'{nome_credor}') >= 0.8".format(id=processo.id,nome_credor=quadro.nome))
        # for habilitacao in processo.processos_vinculados:
        #     if "CREDITO" in habilitacao.classe_processual.nome:
        #         for parte in habilitacao.partes:
        #             if Levenshtein.ratio(quadro.nome, parte.nome) >= 0.8 and not "BANCO" in parte.nome:
        #                 return True
        return True if len(parte) > 0 else False

    i=0
    for bloco,processo in blocos.items():
        if bloco.validacao_nome_credor is None:
            print(" bloco {} de {}".format(str(i), str(len(blocos))))
            quadros_encontrados = []
            for quadro in bloco.quadro_credores:
                achou = encontra_credor_em_habilitacao(processo,quadro)
                if achou:
                    quadros_encontrados.append(quadro)
            bloco.validacao_nome_credor = (len(quadros_encontrados)/len(bloco.quadro_credores))
            bloco_service.salvar(bloco)
        i+=1

def teste_quadro_partes(blocos):
    bloco_service = BlocoQuadroService()


    print("verificando blocos")

    def encontra_credor_nas_partes(processo, quadro):
        if "BANCO" in quadro.nome:
            return False
        parte = processo_service.dao.execute_sql("select pt.nome as nome from producao.processo proc "                                                
                                                 "join producao.parte_processo ptp on ptp.processo_id = proc.id "
                                                 "join producao.parte pt on pt.id = ptp.parte_id "
                                                 "where proc.id = {id} and SIMILARITY(pt.nome,'{nome_credor}') >= 0.8".format(
            id=processo.id, nome_credor=quadro.nome))
        # for parte in processo.partes:
        #     if Levenshtein.ratio(quadro.nome, parte.nome) >= 0.8 and not "BANCO" in parte.nome:
        #         return True
        return True if len(parte) > 0 else False

    i=0
    for bloco, processo in blocos.items():
        if bloco.validacao_parte_credor is None:
            print(" bloco {} de {}".format(str(i), str(len(blocos))))
            quadros_encontrados = []
            for quadro in bloco.quadro_credores:
                achou = encontra_credor_nas_partes(processo, quadro)
                if achou:
                    quadros_encontrados.append(quadro)
            bloco.validacao_parte_credor = (len(quadros_encontrados) / len(bloco.quadro_credores))
            bloco_service.salvar(bloco)
        i+=1


def teste_quadro_entre_quadros(blocos):
    bloco_service = BlocoQuadroService()

    print("verificando blocos")

    def encontra_credor_em_bloco(processo, quadro):
        if "BANCO" in quadro.nome:
            return False

        quadro = processo_service.dao.execute_sql("select quadro.nome as nome from producao.processo proc "
                                                 "join producao.quadro_credor quadro on proc.id = quadro.processo_id "
                                                 "join producao.bloco_quadro bloco on bloco.id = quadro.bloco_quadro_id "                                                 
                                                 "where proc.id = {id} and bloco.id <> {mesmo_bloco} and SIMILARITY(quadro.nome,'{nome_credor}') >= 0.8".format(
            id=processo.id, nome_credor=quadro.nome,mesmo_bloco = quadro.bloco_quadro_id))

        # if bloco == quadro.bloco_quadro:
        #     return False
        # for credor in bloco.quadro_credores:
        #     if Levenshtein.ratio(quadro.nome, credor.nome) >= 0.8 and not "BANCO" in parte.nome:
        #         return True
        # return False

        return quadro

    i =0
    for bloco, processo in blocos.items():
        if bloco.validacao_credor_interno is None:
            print(" bloco {} de {}".format(str(i), str(len(blocos))))
            quadros_encontrados = []
            for quadro in bloco.quadro_credores:
                quadros = encontra_credor_em_bloco(processo, quadro)
                if quadros and len(quadros)>0:
                    quadros_encontrados.append(quadro)
            bloco.validacao_credor_interno = (len(quadros_encontrados) / len(bloco.quadro_credores))
            bloco_service.salvar(bloco)
        i+=1

teste_quadro_habilitacaoes(blocos)
teste_quadro_partes(blocos)
teste_quadro_entre_quadros(blocos)